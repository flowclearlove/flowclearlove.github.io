{
    "version": "https://jsonfeed.org/version/1",
    "title": "让风听见",
    "description": "人生不可能总是顺心如意的，但是持续朝着阳光走，影子就会躲在后面。刺眼，却表明对的方向。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/05/28/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%88%9D%E7%90%86%E8%A7%A3%E4%BD%BF%E7%94%A8/",
            "url": "http://example.com/2023/05/28/python%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%88%9D%E7%90%86%E8%A7%A3%E4%BD%BF%E7%94%A8/",
            "title": "python多线程初理解使用",
            "date_published": "2023-05-28T11:34:57.000Z",
            "content_html": "<h2 id=\"基本使用\"><a class=\"markdownIt-Anchor\" href=\"#基本使用\">#</a> 基本使用</h2>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs scss\">import threading<br><br>def <span class=\"hljs-built_in\">thread_job</span>():<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;This is an added Thread, number is %s&#x27;</span> %threading.<span class=\"hljs-built_in\">current_thread</span>())<br><br><br>def <span class=\"hljs-built_in\">main</span>():<br>    # 输出激活状态的线程数<br>    # <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-built_in\">print</span>(threading.<span class=\"hljs-built_in\">active_count</span>())<br><br>    # 输出当前激活状态线程的详细信息<br>    # [&lt;<span class=\"hljs-built_in\">_MainThread</span>(MainThread, started <span class=\"hljs-number\">14940</span>)&gt;]<br>    <span class=\"hljs-built_in\">print</span>(threading.<span class=\"hljs-built_in\">enumerate</span>())<br><br>    # 输出正在运行的线程是哪一个<br>    # &lt;<span class=\"hljs-built_in\">_MainThread</span>(MainThread, started <span class=\"hljs-number\">14940</span>)&gt;<br>    <span class=\"hljs-built_in\">print</span>(threading.<span class=\"hljs-built_in\">current_thread</span>())<br><br>    # 新建一个线程<br>    # This is an added Thread, number is &lt;<span class=\"hljs-built_in\">Thread</span>(Thread-<span class=\"hljs-number\">1</span>, started <span class=\"hljs-number\">9948</span>)&gt;<br>    added_thread = threading.<span class=\"hljs-built_in\">Thread</span>(target=thread_job)<br>    added_thread.<span class=\"hljs-built_in\">start</span>()<br>    <br>    <br><br>if __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    <span class=\"hljs-built_in\">main</span>()<br></code></pre></td></tr></table></figure>\n<h2 id=\"join方法\"><a class=\"markdownIt-Anchor\" href=\"#join方法\">#</a> join 方法</h2>\n<h3 id=\"不使用join\"><a class=\"markdownIt-Anchor\" href=\"#不使用join\">#</a> 不使用 join</h3>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">import threading  <br><span class=\"hljs-keyword\">from</span> time import sleep  <br>  <br>  <br>def thread_job():  <br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 start\\n&#x27;</span>)  <br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(10):  <br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;0.1&#x27;</span>)  <br>sleep(0.1)  <br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 finish\\n&#x27;</span>)  <br>  <br>  <br>def main():  <br>added_thread = threading.Thread(<span class=\"hljs-attribute\">target</span>=thread_job, <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">&quot;T1&quot;</span>)  <br>added_thread.start()  <br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;all done\\n&#x27;</span>)  <br>  <br>  <br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:  <br>main()<br></code></pre></td></tr></table></figure>\n<h4 id=\"输出\"><a class=\"markdownIt-Anchor\" href=\"#输出\">#</a> 输出</h4>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">T1</span> start<br><span class=\"hljs-attribute\">all</span> done<br><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">T1</span> finish<br></code></pre></td></tr></table></figure>\n<h3 id=\"使用join\"><a class=\"markdownIt-Anchor\" href=\"#使用join\">#</a> 使用 join</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">import threading<br><span class=\"hljs-selector-tag\">from</span> <span class=\"hljs-selector-tag\">time</span> import sleep<br><br>def thread_job():<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 start\\n&#x27;</span>)<br>    for i in <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">10</span>):<br>        <span class=\"hljs-built_in\">sleep</span>(<span class=\"hljs-number\">0.1</span>)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 finish\\n&#x27;</span>)<br><br>def <span class=\"hljs-built_in\">main</span>():<br>    added_thread = threading.<span class=\"hljs-built_in\">Thread</span>(target=thread_job, name=<span class=\"hljs-string\">&quot;T1&quot;</span>)<br>    added_thread.<span class=\"hljs-built_in\">start</span>()<br>    added_thread.<span class=\"hljs-built_in\">join</span>() # 随后的语句将被阻塞<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;all done\\n&#x27;</span>)<br>    <br>if __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    <span class=\"hljs-built_in\">main</span>()<br></code></pre></td></tr></table></figure>\n<h4 id=\"输出-2\"><a class=\"markdownIt-Anchor\" href=\"#输出-2\">#</a> 输出</h4>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">T1</span> start<br><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">0</span>.<span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">T1</span> finish<br><br><span class=\"hljs-attribute\">all</span> done<br></code></pre></td></tr></table></figure>\n<h3 id=\"双线程模型\"><a class=\"markdownIt-Anchor\" href=\"#双线程模型\">#</a> 双线程模型</h3>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">import threading<br><span class=\"hljs-keyword\">from</span> time import sleep<br><br>def thread_job():<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 start\\n&#x27;</span>)<br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(10):<br>        sleep(0.1)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 finish\\n&#x27;</span>)<br><br><span class=\"hljs-comment\"># 一个执行较快的函数</span><br>def T2_job():<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T2 start\\n&#x27;</span>)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T2 finish\\n&#x27;</span>)<br><br>def main():<br>    added_thread = threading.Thread(<span class=\"hljs-attribute\">target</span>=thread_job, <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">&quot;T1&quot;</span>)<br>    thread_2 = threading.Thread(<span class=\"hljs-attribute\">target</span>=T2_job, <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">&quot;T2&quot;</span>)<br>    added_thread.start()<br>    thread_2.start()<br>    added_thread.join() # 随后的语句将被阻塞<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;all done\\n&#x27;</span>)<br>    <br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure>\n<h4 id=\"输出-3\"><a class=\"markdownIt-Anchor\" href=\"#输出-3\">#</a> 输出</h4>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-built_in\">T1</span> start<br><br><span class=\"hljs-built_in\">T2</span> start<br><br><span class=\"hljs-built_in\">T2</span> finish<br><br><span class=\"hljs-built_in\">T1</span> finish<br><br>all done<br></code></pre></td></tr></table></figure>\n<p><strong>即便是运行较快的线程，只要不阻塞，其优先级也会低于主线程：</strong></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\">import threading<br><span class=\"hljs-keyword\">from</span> time import sleep<br><br>def thread_job():<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 start\\n&#x27;</span>)<br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> range(10):<br>        sleep(0.1)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T1 finish\\n&#x27;</span>)<br><br><span class=\"hljs-comment\"># 一个执行较快的函数</span><br>def T2_job():<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T2 start\\n&#x27;</span>)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;T2 finish\\n&#x27;</span>)<br><br>def main():<br>    added_thread = threading.Thread(<span class=\"hljs-attribute\">target</span>=thread_job, <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">&quot;T1&quot;</span>)<br>    thread_2 = threading.Thread(<span class=\"hljs-attribute\">target</span>=T2_job, <span class=\"hljs-attribute\">name</span>=<span class=\"hljs-string\">&quot;T2&quot;</span>)<br>    added_thread.start()<br>    added_thread.join() # 随后的语句将被阻塞<br>    thread_2.start()<br>    # thread_2.join() # 随后的语句将被阻塞<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;all done\\n&#x27;</span>)<br>    <br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    main()<br><br><br><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\"><span class=\"hljs-built_in\">T1</span> start<br><br><span class=\"hljs-built_in\">T1</span> finish<br><br><span class=\"hljs-built_in\">T2</span> start<br>all done<br><br><br><span class=\"hljs-built_in\">T2</span> finish<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"queue功能\"><a class=\"markdownIt-Anchor\" href=\"#queue功能\">#</a> Queue 功能</h2>\n<p>由于多线程没有返回值，我们可以将其运算结果放在一个队列中，随后每个线程的队列到主线程中后即可取出数据。</p>\n<p>以计算列表中每个元素值的平方为例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> threading<br><span class=\"hljs-keyword\">from</span> queue <span class=\"hljs-keyword\">import</span> Queue<br><br><span class=\"hljs-comment\"># 二次方的实现</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">job</span>(<span class=\"hljs-params\">l,q</span>):<br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-built_in\">len</span>(l)):<br>        l[i] = l[i] ** <span class=\"hljs-number\">2</span><br>    q.put(l)<br><br><span class=\"hljs-comment\"># 多线程模块</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">multithreading</span>():<br>    <span class=\"hljs-comment\"># 定义队列（放返回值以取代return）</span><br>    q = Queue()<br>    <span class=\"hljs-comment\"># 所有的线程放入本列表</span><br>    threads = []<br>    data = [[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>],[<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">5</span>],[<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>,<span class=\"hljs-number\">4</span>],[<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">5</span>,<span class=\"hljs-number\">5</span>]]<br>    <span class=\"hljs-comment\"># 定义4个线程</span><br>    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">4</span>):<br>        <span class=\"hljs-comment\"># 设定线程并对每个线程传进去一个子列表和全局队列</span><br>        t = threading.Thread(target=job, args=(data[i], q))<br>        <span class=\"hljs-comment\"># 启动线程</span><br>        t.start()<br>        <span class=\"hljs-comment\"># 加入到所有线程中</span><br>        threads.append(t)<br>    <span class=\"hljs-comment\"># 阻塞每一个线程以实现异步(需要并发而不是依次执行)</span><br>    <span class=\"hljs-keyword\">for</span> thread <span class=\"hljs-keyword\">in</span> threads:<br>        thread.join()<br>    <span class=\"hljs-comment\"># 定义空列表(用来存每一个线程返回过来的值)</span><br>    results = []<br>    <span class=\"hljs-keyword\">for</span> _ <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">4</span>):<br>        <span class=\"hljs-comment\"># 按顺序从q中取出值存到results</span><br>        results.append(q.get())<br>    <span class=\"hljs-built_in\">print</span>(results)<br>    <br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    multithreading()<br></code></pre></td></tr></table></figure>\n<h2 id=\"全局解释锁\"><a class=\"markdownIt-Anchor\" href=\"#全局解释锁\">#</a> 全局解释锁</h2>\n<p>Python 的多线程，只有用于 I/O 密集型程序时效率才会有明显的提高。</p>\n<p>原因如下：</p>\n<p>Python 代码的执行是由 Python 虚拟机进行控制。它在主循环中同时只能有一个控制线程在执行，意思就是 Python 解释器中可以运行多个线程，但是在执行的只有一个线程，其他的处于等待状态。</p>\n<p>这些线程执行是有全局解释器锁（GIL）控制，它来保证同时只有一个线程在运行。在多线程运行环境中，Python 虚拟机执行方式如下：</p>\n<p>设置 GIL<br>\n 切换进线程<br>\n执行下面操作之一<br>\n​ 1. 运行指定数量的字节码指令</p>\n<p>2. 线程主动让出控制权</p>\n<p>切换出线程（线程处于睡眠状态）<br>\n解锁 GIL<br>\n 进入 1 步骤</p>\n<blockquote>\n<p><code>Python</code>  运行计算密集型的多线程程序时，更倾向于让线程在整个时间片内始终占据 <code>GIL</code> ，而 <code>I/O</code>  秘籍型的多线程程序在 I/O 被调用前会释放 <code>GIL</code> ，以允许其他线程在 <code>I/O</code>  执行的时候运行。<br>\n<strong>下面这段示例运行时多线程未必胜得过单线程：</strong></p>\n</blockquote>\n <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">import threading<br>import <span class=\"hljs-selector-tag\">time</span><br>import copy<br><span class=\"hljs-selector-tag\">from</span> queue import Queue<br><br>def job(l, <span class=\"hljs-selector-tag\">q</span>):<br>    res = <span class=\"hljs-built_in\">sum</span>(l)<br>    q.<span class=\"hljs-built_in\">put</span>(res)<br>def <span class=\"hljs-built_in\">multithreading</span>(l):<br>    q = <span class=\"hljs-built_in\">Queue</span>()<br>    threads = []<br>    for i in <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">4</span>):<br>        t = threading.<span class=\"hljs-built_in\">Thread</span>(target=job, args=(copy.<span class=\"hljs-built_in\">copy</span>(l),q),name=<span class=\"hljs-string\">&#x27;T%i&#x27;</span>%i)<br>        t.<span class=\"hljs-built_in\">start</span>()<br>        threads.<span class=\"hljs-built_in\">append</span>(t)<br>    [t.<span class=\"hljs-built_in\">join</span>() for t in threads]<br>    total = <span class=\"hljs-number\">0</span><br>    for _ in <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">4</span>):<br>        total += q.<span class=\"hljs-built_in\">get</span>()<br>    <span class=\"hljs-built_in\">print</span>(total)<br><br>def <span class=\"hljs-built_in\">normal</span>(l):<br>    total = <span class=\"hljs-built_in\">sum</span>(l)<br>    <span class=\"hljs-built_in\">print</span>(total)<br><br>if __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    l = <span class=\"hljs-built_in\">list</span>(<span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1000000</span>))<br>    s_t=time.<span class=\"hljs-built_in\">time</span>()<br>    <span class=\"hljs-built_in\">normal</span>(l*<span class=\"hljs-number\">4</span>)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;normal:&#x27;</span>,time.<span class=\"hljs-built_in\">time</span>()-s_t)<br>    s_t=time.<span class=\"hljs-built_in\">time</span>()<br>    <span class=\"hljs-built_in\">multithreading</span>(l)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;multithreading:&#x27;</span>,time.<span class=\"hljs-built_in\">time</span>()-s_t)<br><br><br></code></pre></td></tr></table></figure>\n<h2 id=\"lock线程锁\"><a class=\"markdownIt-Anchor\" href=\"#lock线程锁\">#</a> Lock 线程锁</h2>\n<p>第一个线程处理完再开始第二个线程（针对 shared memory 场景）</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs csharp\"><span class=\"hljs-function\">import threading</span><br><span class=\"hljs-function\"></span><br><span class=\"hljs-function\">def <span class=\"hljs-title\">job1</span>():</span><br><span class=\"hljs-function\">    <span class=\"hljs-keyword\">global</span> A, <span class=\"hljs-keyword\">lock</span></span><br><span class=\"hljs-function\">    # 打开线程锁</span><br><span class=\"hljs-function\">    <span class=\"hljs-keyword\">lock</span>.<span class=\"hljs-title\">acquire</span>()</span><br><span class=\"hljs-function\">    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-title\">range</span>(<span class=\"hljs-params\"><span class=\"hljs-number\">10</span></span>):</span><br><span class=\"hljs-function\">        A +</span>= <span class=\"hljs-number\">1</span><br>        print(<span class=\"hljs-string\">&#x27;job1&#x27;</span>, A)<br>    <span class=\"hljs-meta\"># 关闭线程锁</span><br>    <span class=\"hljs-keyword\">lock</span>.release()<br><br><span class=\"hljs-function\">def <span class=\"hljs-title\">job2</span>():</span><br><span class=\"hljs-function\">    <span class=\"hljs-keyword\">global</span> A, <span class=\"hljs-keyword\">lock</span></span><br><span class=\"hljs-function\">    # 打开线程锁</span><br><span class=\"hljs-function\">    <span class=\"hljs-keyword\">lock</span>.<span class=\"hljs-title\">acquire</span>()</span><br><span class=\"hljs-function\">    <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-title\">range</span>(<span class=\"hljs-params\"><span class=\"hljs-number\">10</span></span>):</span><br><span class=\"hljs-function\">        A +</span>= <span class=\"hljs-number\">10</span><br>        print(<span class=\"hljs-string\">&#x27;job2&#x27;</span>, A)<br>    <span class=\"hljs-meta\"># 关闭线程锁</span><br>    <span class=\"hljs-keyword\">lock</span>.release()<br><br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&#x27;__main__&#x27;</span>:<br>    <span class=\"hljs-keyword\">lock</span> = threading.Lock()<br>    A = <span class=\"hljs-number\">0</span><br>    t1 = threading.Thread(target=job1)<br>    t2 = threading.Thread(target=job2)<br>    t1.start()<br>    t2.start()<br>    t1.<span class=\"hljs-keyword\">join</span>()<br>    t2.<span class=\"hljs-keyword\">join</span>()<br></code></pre></td></tr></table></figure>\n<h3 id=\"输出-4\"><a class=\"markdownIt-Anchor\" href=\"#输出-4\">#</a> 输出</h3>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">1</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">2</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">3</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">4</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">5</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">6</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">7</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">8</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">9</span><br><span class=\"hljs-attribute\">job1</span> <span class=\"hljs-number\">10</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">20</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">30</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">40</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">50</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">60</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">70</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">80</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">90</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">100</span><br><span class=\"hljs-attribute\">job2</span> <span class=\"hljs-number\">110</span><br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "多线程"
            ]
        },
        {
            "id": "http://example.com/2023/05/24/python%E5%A4%84%E7%90%86excel%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/",
            "url": "http://example.com/2023/05/24/python%E5%A4%84%E7%90%86excel%E6%95%99%E7%A8%8B%E7%B3%BB%E5%88%97/",
            "title": "python处理excel教程系列",
            "date_published": "2023-05-24T12:25:36.000Z",
            "content_html": "<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><blockquote>\n<p>因为工作中经常会需要用到脚本来批量处理excel数据，所以整理一下相关知识点，进行记录复习。</p>\n<p>目前的学习计划是：<code>openpyxl</code>    <code>pandas</code></p>\n</blockquote>\n<h2 id=\"一、openpyxl学习记录\"><a href=\"#一、openpyxl学习记录\" class=\"headerlink\" title=\"一、openpyxl学习记录\"></a>一、openpyxl学习记录</h2><h3 id=\"1-通用脚本函数\"><a href=\"#1-通用脚本函数\" class=\"headerlink\" title=\"1. 通用脚本函数\"></a>1. 通用脚本函数</h3><blockquote>\n<p>下面的函数可以直接进行调用，很是方便</p>\n</blockquote>\n<p>网上找来的，实现的功能：</p>\n<ol>\n<li>获取表格的总行数和总列数</li>\n<li>获取某个单元格的值</li>\n<li>获取某列的所有值</li>\n<li>获取某行所有值</li>\n<li>设置某个单元格的值</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> openpyxl <span class=\"hljs-keyword\">import</span> *<br><br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExcelOp</span>(<span class=\"hljs-title class_ inherited__\">object</span>):<br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self, file</span>):<br>        self.file = file<br>        self.wb = load_workbook(self.file)<br>        sheets = self.wb.get_sheet_names()<br>        self.sheet = sheets[<span class=\"hljs-number\">0</span>]<br>        self.ws = self.wb[self.sheet]<br><br>    <span class=\"hljs-comment\"># 获取表格的总行数和总列数</span><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_row_clo_num</span>(<span class=\"hljs-params\">self</span>):<br>        rows = self.ws.max_row<br>        columns = self.ws.max_column<br>        <span class=\"hljs-keyword\">return</span> rows, columns<br><br>    <span class=\"hljs-comment\"># 获取某个单元格的值</span><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_cell_value</span>(<span class=\"hljs-params\">self, row, column</span>):<br>        cell_value = self.ws.cell(row=row, column=column).value<br>        <span class=\"hljs-keyword\">return</span> cell_value<br><br>    <span class=\"hljs-comment\"># 获取某列的所有值</span><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_col_value</span>(<span class=\"hljs-params\">self, column</span>):<br>        rows = self.ws.max_row<br>        column_data = []<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, rows + <span class=\"hljs-number\">1</span>):<br>            cell_value = self.ws.cell(row=i, column=column).value<br>            column_data.append(cell_value)<br>        <span class=\"hljs-keyword\">return</span> column_data<br><br>    <span class=\"hljs-comment\"># 获取某行所有值</span><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_row_value</span>(<span class=\"hljs-params\">self, row</span>):<br>        columns = self.ws.max_column<br>        row_data = []<br>        <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, columns + <span class=\"hljs-number\">1</span>):<br>            cell_value = self.ws.cell(row=row, column=i).value<br>            row_data.append(cell_value)<br>        <span class=\"hljs-keyword\">return</span> row_data<br><br>    <span class=\"hljs-comment\"># 设置某个单元格的值</span><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">set_cell_value</span>(<span class=\"hljs-params\">self, row, colunm, cellvalue</span>):<br>        <span class=\"hljs-keyword\">try</span>:<br>            self.ws.cell(row=row, column=colunm).value = cellvalue<br>            self.wb.save(self.file)<br>        <span class=\"hljs-keyword\">except</span>:<br>            self.ws.cell(row=row, column=colunm).value = <span class=\"hljs-string\">&quot;writefail&quot;</span><br>            self.wb.save(self.file)<br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:<br>    excel_op = ExcelOp(file=<span class=\"hljs-string\">&quot;output/photo_name.xlsx&quot;</span>)<br>    first_row = excel_op.get_row_value(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-built_in\">print</span>(first_row)<br>    second_col = excel_op.get_col_value(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-built_in\">print</span>(second_col)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"2-安装\"><a href=\"#2-安装\" class=\"headerlink\" title=\"2.安装\"></a>2.安装</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">pip <span class=\"hljs-keyword\">install</span> openpyxl<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"3-创建文件\"><a href=\"#3-创建文件\" class=\"headerlink\" title=\"3.创建文件\"></a>3.创建文件</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">from openpyxl import Workbook<br>import <span class=\"hljs-selector-tag\">time</span><br><br>book = <span class=\"hljs-built_in\">Workbook</span>()<br>sheet = book<span class=\"hljs-selector-class\">.active</span><br>#写入数据<span class=\"hljs-number\">1</span><br>sheet<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;A1&#x27;</span>]</span> = <span class=\"hljs-number\">56</span><br>sheet<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;A2&#x27;</span>]</span> = <span class=\"hljs-number\">43</span><br>##写入数据<span class=\"hljs-number\">2</span>（方式<span class=\"hljs-number\">2</span>）<br>sheet<span class=\"hljs-selector-class\">.cell</span>(row=<span class=\"hljs-number\">2</span>, column=<span class=\"hljs-number\">2</span>)<span class=\"hljs-selector-class\">.value</span> = <span class=\"hljs-number\">2</span><br>#写入日期<br>now = <span class=\"hljs-selector-tag\">time</span><span class=\"hljs-selector-class\">.strftime</span>(<span class=\"hljs-string\">&quot;%x&quot;</span>)<br>sheet<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;A3&#x27;</span>]</span> = now<br>#保存文件<br>book<span class=\"hljs-selector-class\">.save</span>(<span class=\"hljs-string\">&quot;sample.xlsx&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"image-20230524210328692.png\" alt=\"image-20230524210328692\"></p>\n<h4 id=\"4-列表插入行\"><a href=\"#4-列表插入行\" class=\"headerlink\" title=\"4.列表插入行\"></a>4.列表插入行</h4><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gradle\">#!<span class=\"hljs-regexp\">/usr/</span>bin/env python<br><br><span class=\"hljs-keyword\">from</span> openpyxl <span class=\"hljs-keyword\">import</span> Workbook<br><br>book = Workbook()<br>sheet = book.active<br><br>rows = (<br>    (<span class=\"hljs-number\">88</span>, <span class=\"hljs-number\">46</span>, <span class=\"hljs-number\">57</span>),<br>    (<span class=\"hljs-number\">89</span>, <span class=\"hljs-number\">38</span>, <span class=\"hljs-number\">12</span>),<br>    (<span class=\"hljs-number\">23</span>, <span class=\"hljs-number\">59</span>, <span class=\"hljs-number\">78</span>),<br>    (<span class=\"hljs-number\">56</span>, <span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">98</span>),<br>    (<span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">43</span>),<br>    (<span class=\"hljs-number\">34</span>, <span class=\"hljs-number\">15</span>, <span class=\"hljs-number\">67</span>)<br>)<br><br><span class=\"hljs-keyword\">for</span> row in rows:<br>    sheet.<span class=\"hljs-keyword\">append</span>(row)<br><br>book.save(<span class=\"hljs-string\">&#x27;appending.xlsx&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"image-20230524210619588.png\" alt=\"image-20230524210619588\"></p>\n<h3 id=\"5-读取单元格\"><a href=\"#5-读取单元格\" class=\"headerlink\" title=\"5.读取单元格\"></a>5.读取单元格</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">#!/usr/bin/env python<br><br>import openpyxl<br><br>book = openpyxl<span class=\"hljs-selector-class\">.load_workbook</span>(<span class=\"hljs-string\">&#x27;sample.xlsx&#x27;</span>)<br><br>sheet = book<span class=\"hljs-selector-class\">.active</span><br><br>a1 = sheet<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;A1&#x27;</span>]</span><br>a2 = sheet<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;A2&#x27;</span>]</span><br>a3 = sheet<span class=\"hljs-selector-class\">.cell</span>(row=<span class=\"hljs-number\">3</span>, column=<span class=\"hljs-number\">1</span>)<br><br><span class=\"hljs-function\"><span class=\"hljs-title\">print</span><span class=\"hljs-params\">(a1.value)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">print</span><span class=\"hljs-params\">(a2.value)</span></span><br><span class=\"hljs-function\"><span class=\"hljs-title\">print</span><span class=\"hljs-params\">(a3.value)</span></span><br></code></pre></td></tr></table></figure>\n\n<p><img src=\"image-20230524210744964.png\" alt=\"image-20230524210744964\"></p>\n<h3 id=\"6-读取多个单元格\"><a href=\"#6-读取多个单元格\" class=\"headerlink\" title=\"6.读取多个单元格\"></a>6.读取多个单元格</h3><p>假设数据：</p>\n<p><img src=\"image-20230524210937671.png\" alt=\"image-20230524210937671\"></p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">#!/usr/bin/env python<br><br>import openpyxl<br><br>book = openpyxl<span class=\"hljs-selector-class\">.load_workbook</span>(<span class=\"hljs-string\">&#x27;items.xlsx&#x27;</span>)<br><br>sheet = book<span class=\"hljs-selector-class\">.active</span><br><br>cells = sheet<span class=\"hljs-selector-attr\">[<span class=\"hljs-string\">&#x27;A1&#x27;</span>: <span class=\"hljs-string\">&#x27;B6&#x27;</span>]</span><br><br><span class=\"hljs-keyword\">for</span> c1, c2 <span class=\"hljs-keyword\">in</span> cells:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;&#123;0:8&#125; &#123;1:8&#125;&quot;</span><span class=\"hljs-selector-class\">.format</span>(c1<span class=\"hljs-selector-class\">.value</span>, c2.value))<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"7-按行迭代\"><a href=\"#7-按行迭代\" class=\"headerlink\" title=\"7.按行迭代\"></a>7.按行迭代</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#!/usr/bin/env python</span><br><br><span class=\"hljs-keyword\">from</span> openpyxl import Workbook<br><br>book = Workbook()<br>sheet = book.active<br><br>rows = (<br>    (88, 46, 57),<br>    (89, 38, 12),<br>    (23, 59, 78),<br>    (56, 21, 98),<br>    (24, 18, 43),<br>    (34, 15, 67)<br>)<br><br><span class=\"hljs-keyword\">for</span> row <span class=\"hljs-keyword\">in</span> rows:<br>    sheet.append(row)<br><br><span class=\"hljs-keyword\">for</span> row <span class=\"hljs-keyword\">in</span> sheet.iter_rows(<span class=\"hljs-attribute\">min_row</span>=1, <span class=\"hljs-attribute\">min_col</span>=1, <span class=\"hljs-attribute\">max_row</span>=6, <span class=\"hljs-attribute\">max_col</span>=3):<br>    <span class=\"hljs-keyword\">for</span> cell <span class=\"hljs-keyword\">in</span> row:<br>        <span class=\"hljs-built_in\">print</span>(cell.value, <span class=\"hljs-attribute\">end</span>=<span class=\"hljs-string\">&quot; &quot;</span>)<br>    <span class=\"hljs-built_in\">print</span>()    <br><br>book.save(<span class=\"hljs-string\">&#x27;iterbyrows.xlsx&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"8-按列迭代\"><a href=\"#8-按列迭代\" class=\"headerlink\" title=\"8.按列迭代\"></a>8.按列迭代</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-comment\">#!/usr/bin/env python</span><br><br><span class=\"hljs-keyword\">from</span> openpyxl import Workbook<br><br>book = Workbook()<br>sheet = book.active<br><br>rows = (<br>    (88, 46, 57),<br>    (89, 38, 12),<br>    (23, 59, 78),<br>    (56, 21, 98),<br>    (24, 18, 43),<br>    (34, 15, 67)<br>)<br><br><span class=\"hljs-keyword\">for</span> row <span class=\"hljs-keyword\">in</span> rows:<br>    sheet.append(row)<br><br><span class=\"hljs-keyword\">for</span> row <span class=\"hljs-keyword\">in</span> sheet.iter_cols(<span class=\"hljs-attribute\">min_row</span>=1, <span class=\"hljs-attribute\">min_col</span>=1, <span class=\"hljs-attribute\">max_row</span>=6, <span class=\"hljs-attribute\">max_col</span>=3):<br>    <span class=\"hljs-keyword\">for</span> cell <span class=\"hljs-keyword\">in</span> row:<br>        <span class=\"hljs-built_in\">print</span>(cell.value, <span class=\"hljs-attribute\">end</span>=<span class=\"hljs-string\">&quot; &quot;</span>)<br>    <span class=\"hljs-built_in\">print</span>()    <br><br>book.save(<span class=\"hljs-string\">&#x27;iterbycols.xlsx&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n",
            "tags": [
                "excel"
            ]
        },
        {
            "id": "http://example.com/2023/05/14/%E8%AF%AD%E9%9B%80%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BAmarkdown/",
            "url": "http://example.com/2023/05/14/%E8%AF%AD%E9%9B%80%E4%B8%80%E9%94%AE%E5%AF%BC%E5%87%BAmarkdown/",
            "title": "语雀一键导出markdown",
            "date_published": "2023-05-14T06:03:27.000Z",
            "content_html": "<h2 id=\"安装python\"><a class=\"markdownIt-Anchor\" href=\"#安装python\">#</a> 安装 python</h2>\n<p><img src=\"image-20230514140518058.png\" alt=\"image-20230514140518058\"></p>\n<h2 id=\"pip安装库\"><a class=\"markdownIt-Anchor\" href=\"#pip安装库\">#</a> pip 安装库</h2>\n<figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cmake\">pip3 <span class=\"hljs-keyword\">install</span> requests psutil<br></code></pre></td></tr></table></figure>\n<h2 id=\"执行脚本\"><a class=\"markdownIt-Anchor\" href=\"#执行脚本\">#</a> 执行脚本</h2>\n<figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vim\"><span class=\"hljs-keyword\">python3</span> yuque.<span class=\"hljs-keyword\">py</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs py\"><span class=\"hljs-keyword\">import</span> json<br><span class=\"hljs-keyword\">import</span> sys<br><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> re<br><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> psutil<br><span class=\"hljs-keyword\">from</span> datetime <span class=\"hljs-keyword\">import</span> datetime<br><br><span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">getattr</span>(sys, <span class=\"hljs-string\">&#x27;frozen&#x27;</span>, <span class=\"hljs-literal\">False</span>):<br>    APPLICATION_PATH = os.path.dirname(sys.executable)<br><span class=\"hljs-keyword\">else</span>:<br>    APPLICATION_PATH = os.path.dirname(<span class=\"hljs-string\">&#x27;.&#x27;</span>)x<br><span class=\"hljs-built_in\">print</span>(APPLICATION_PATH)<br>jsonConfig = json.load(<span class=\"hljs-built_in\">open</span>(os.path.join(APPLICATION_PATH, <span class=\"hljs-string\">&quot;config.json&quot;</span>), encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>))<br><br><br><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">ExportYueQueDoc</span>:<br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">__init__</span>(<span class=\"hljs-params\">self</span>):<br>        <span class=\"hljs-keyword\">try</span>:<br>            <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">getattr</span>(sys, <span class=\"hljs-string\">&#x27;frozen&#x27;</span>, <span class=\"hljs-literal\">False</span>):<br>                APPLICATION_PATH = os.path.dirname(sys.executable)<br>            <span class=\"hljs-keyword\">else</span>:<br>                APPLICATION_PATH = os.path.dirname(<span class=\"hljs-string\">&#x27;.&#x27;</span>)<br>            self.jsonConfig = json.load(<span class=\"hljs-built_in\">open</span>(os.path.join(APPLICATION_PATH, <span class=\"hljs-string\">&quot;config.json&quot;</span>), encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>))<br>            self.base_url = self.jsonConfig[<span class=\"hljs-string\">&#x27;BASE_URL&#x27;</span>]<br>            self.token = self.jsonConfig[<span class=\"hljs-string\">&#x27;TOKEN&#x27;</span>]<br>            self.headers = &#123;<br>                <span class=\"hljs-string\">&quot;User-Agent&quot;</span>: self.jsonConfig[<span class=\"hljs-string\">&#x27;USER_AGENT&#x27;</span>],<br>                <span class=\"hljs-string\">&quot;X-Auth-Token&quot;</span>: self.jsonConfig[<span class=\"hljs-string\">&#x27;TOKEN&#x27;</span>]<br>            &#125;<br>            self.data_path = self.jsonConfig[<span class=\"hljs-string\">&#x27;DATA_PATH&#x27;</span>]<br>        <span class=\"hljs-keyword\">except</span>:<br>            <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;config.json 有误&quot;</span>)<br><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_user_info</span>(<span class=\"hljs-params\">self</span>):<br>        res_obj = requests.get(url=self.base_url + <span class=\"hljs-string\">&#x27;/user&#x27;</span>, headers=self.headers)<br>        <span class=\"hljs-keyword\">if</span> res_obj.status_code != <span class=\"hljs-number\">200</span>:<br>            <span class=\"hljs-keyword\">raise</span> ValueError(<span class=\"hljs-string\">&quot;Token 信息错误&quot;</span>)<br>        user_json = res_obj.json()<br>        self.login_id = user_json[<span class=\"hljs-string\">&#x27;data&#x27;</span>][<span class=\"hljs-string\">&#x27;login&#x27;</span>]<br>        self.uid = user_json[<span class=\"hljs-string\">&#x27;data&#x27;</span>][<span class=\"hljs-string\">&#x27;id&#x27;</span>]<br>        self.username = user_json[<span class=\"hljs-string\">&#x27;data&#x27;</span>][<span class=\"hljs-string\">&#x27;name&#x27;</span>]<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;=========== 用户信息初始化成功 ==========&quot;</span>)<br><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_repos_data</span>(<span class=\"hljs-params\">self</span>):<br>        repos_json = requests.get(self.base_url + <span class=\"hljs-string\">&#x27;/users/&#x27;</span> + self.login_id + <span class=\"hljs-string\">&#x27;/repos&#x27;</span>, headers=self.headers).json()<br>        repos_list = []<br>        <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> repos_json[<span class=\"hljs-string\">&#x27;data&#x27;</span>]:<br>            rid = item[<span class=\"hljs-string\">&#x27;id&#x27;</span>]  <span class=\"hljs-comment\"># 知识库id</span><br>            name = item[<span class=\"hljs-string\">&#x27;name&#x27;</span>]  <span class=\"hljs-comment\"># 知识库名称</span><br>            repos_list.append(&#123;<span class=\"hljs-string\">&quot;rid&quot;</span>: rid, <span class=\"hljs-string\">&quot;repos_name&quot;</span>: name&#125;)<br>        <span class=\"hljs-keyword\">return</span> repos_list<br><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">get_article_data</span>(<span class=\"hljs-params\">self, repos_list</span>):<br>        <span class=\"hljs-string\">&quot;&quot;&quot;获取文章数据&quot;&quot;&quot;</span><br>        article_list = []<br>        <span class=\"hljs-keyword\">for</span> repos <span class=\"hljs-keyword\">in</span> repos_list:<br>            article_datas = requests.get(self.base_url + <span class=\"hljs-string\">&#x27;/repos/&#x27;</span> + <span class=\"hljs-built_in\">str</span>(repos[<span class=\"hljs-string\">&#x27;rid&#x27;</span>]) + <span class=\"hljs-string\">&#x27;/docs&#x27;</span>,<br>                                         headers=self.headers).json()<br>            <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> article_datas[<span class=\"hljs-string\">&#x27;data&#x27;</span>]:<br>                bid = repos[<span class=\"hljs-string\">&#x27;rid&#x27;</span>]<br>                title = item[<span class=\"hljs-string\">&#x27;title&#x27;</span>]  <span class=\"hljs-comment\"># 文章标题</span><br>                desc = item[<span class=\"hljs-string\">&#x27;description&#x27;</span>]<br>                slug = item[<span class=\"hljs-string\">&#x27;slug&#x27;</span>]<br>                article_list.append(<br>                    &#123;<span class=\"hljs-string\">&quot;bid&quot;</span>: bid, <span class=\"hljs-string\">&quot;title&quot;</span>: title, <span class=\"hljs-string\">&quot;desc&quot;</span>: desc, <span class=\"hljs-string\">&quot;slug&quot;</span>: slug, <span class=\"hljs-string\">&quot;repos_name&quot;</span>: repos[<span class=\"hljs-string\">&quot;repos_name&quot;</span>]&#125;)<br><br>        <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> article_list:<br>            per_article_data = requests.get(self.base_url + <span class=\"hljs-string\">&#x27;/repos/&#x27;</span> + <span class=\"hljs-built_in\">str</span>(item[<span class=\"hljs-string\">&#x27;bid&#x27;</span>]) + <span class=\"hljs-string\">&#x27;/docs/&#x27;</span> + item[<span class=\"hljs-string\">&#x27;slug&#x27;</span>],<br>                                            headers=self.headers).json()<br>            posts_text = re.sub(<span class=\"hljs-string\">r&#x27;\\\\n&#x27;</span>, <span class=\"hljs-string\">&quot;\\n&quot;</span>, per_article_data[<span class=\"hljs-string\">&#x27;data&#x27;</span>][<span class=\"hljs-string\">&#x27;body&#x27;</span>])<br>            result = re.sub(<span class=\"hljs-string\">r&#x27;&lt;a name=&quot;(.*)&quot;&gt;&lt;/a&gt;&#x27;</span>, <span class=\"hljs-string\">&quot;&quot;</span>, posts_text)<br>            <span class=\"hljs-comment\"># all_datas.append(&#123;&quot;title&quot;: item[&#x27;title&#x27;], &quot;content&quot;: result&#125;)</span><br>            <span class=\"hljs-keyword\">yield</span> result, item[<span class=\"hljs-string\">&quot;repos_name&quot;</span>], item[<span class=\"hljs-string\">&#x27;title&#x27;</span>]<br><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">save_article</span>(<span class=\"hljs-params\">self, result, repos_name, title</span>):<br>        current_time = datetime.now().strftime(<span class=\"hljs-string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)<br>        dir_path = <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">&#123;self.data_path&#125;</span>/<span class=\"hljs-subst\">&#123;repos_name&#125;</span>&quot;</span><br>        dir_path = dir_path.replace(<span class=\"hljs-string\">&quot;.&quot;</span>,<span class=\"hljs-string\">&quot;_&quot;</span>)<br>        filepath = dir_path + <span class=\"hljs-string\">f&quot;/<span class=\"hljs-subst\">&#123;title&#125;</span>.md&quot;</span><br>        dir_ret = os.path.exists(dir_path)<br>        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> dir_ret:<br>            os.makedirs(dir_path)<br>            <span class=\"hljs-comment\">#exists_ret = os.path.exists(filepath)</span><br>        <span class=\"hljs-keyword\">try</span>:<br>            <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(filepath, <span class=\"hljs-string\">&#x27;a&#x27;</span>, encoding=<span class=\"hljs-string\">&quot;utf-8&quot;</span>) <span class=\"hljs-keyword\">as</span> fp:<br>                fp.writelines(result)<br>                <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;[<span class=\"hljs-subst\">&#123;current_time&#125;</span>]  <span class=\"hljs-subst\">&#123;title&#125;</span> 导出完成&quot;</span>)<br>        <span class=\"hljs-keyword\">except</span> Exception <span class=\"hljs-keyword\">as</span> e:<br>            <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;[<span class=\"hljs-subst\">&#123;current_time&#125;</span>]  <span class=\"hljs-subst\">&#123;title&#125;</span> 导出失败&quot;</span>)<br><br>    <span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\">self</span>):<br>        self.get_user_info()<br>        repos_list = self.get_repos_data()<br>        gen_obj = self.get_article_data(repos_list)<br>        <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> gen_obj:<br>            self.save_article(item[<span class=\"hljs-number\">0</span>], item[<span class=\"hljs-number\">1</span>], item[<span class=\"hljs-number\">2</span>])<br><br><br><span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">&quot;__main__&quot;</span>:<br>    yq = ExportYueQueDoc()<br>    yq.main()<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "语雀"
            ]
        },
        {
            "id": "http://example.com/2023/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E6%90%AD%E5%BB%BAwebdev%EF%BC%88docker%EF%BC%89/",
            "url": "http://example.com/2023/05/14/%E9%98%BF%E9%87%8C%E4%BA%91%E6%90%AD%E5%BB%BAwebdev%EF%BC%88docker%EF%BC%89/",
            "title": "阿里云搭建webdev（docker）",
            "date_published": "2023-05-14T05:31:47.000Z",
            "content_html": "<h2 id=\"基础条件\"><a class=\"markdownIt-Anchor\" href=\"#基础条件\">#</a> 基础条件</h2>\n<p>使用 docker 快速为 joplin 搭建 WebDAV 服务<br>\n 1. 前提条件</p>\n<blockquote>\n<p>有自己的服务器，有可以访问的域名或 ip<br>\n 服务器上已经安装好 docker 和 docker-compose<br>\n 自己电脑上或手机上已经安装好 joplin 软件</p>\n</blockquote>\n<h2 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h2>\n<p>配置信息 (可根据自己实际情况调整)：</p>\n<ol>\n<li>监听端口: 22300</li>\n<li>访问域名: <a href=\"http://xxxx.com\">http://xxxx.com</a></li>\n<li>数据目录: /data/dav</li>\n<li>配置文件: /data/joplin.yml</li>\n</ol>\n<p>/data/joplin.yml 文件，内容如下:</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">version:</span> <span class=\"hljs-string\">&#x27;3&#x27;</span><br><span class=\"hljs-symbol\">services:</span><br><span class=\"hljs-symbol\">  webdav:</span><br><span class=\"hljs-symbol\">    image:</span> bytemark/webdav<br><span class=\"hljs-symbol\">    container_name:</span> webdav1<br><span class=\"hljs-symbol\">    restart:</span> always<br><span class=\"hljs-symbol\">    ports:</span><br>      - <span class=\"hljs-string\">&quot;22300:80&quot;</span><br><span class=\"hljs-symbol\">    environment:</span><br><span class=\"hljs-symbol\">      SERVER_NAMES:</span> 域名或者IP<br><span class=\"hljs-symbol\">      AUTH_TYPE:</span> Basic<br><span class=\"hljs-symbol\">      USERNAME:</span> webdev 账户名字<br><span class=\"hljs-symbol\">      PASSWORD:</span> webdev 用户密码<br><span class=\"hljs-symbol\">    volumes:</span><br>      - <span class=\"hljs-keyword\">/data/</span>dav:<span class=\"hljs-keyword\">/var/</span>lib/dav  数据保存位置<br><br></code></pre></td></tr></table></figure>\n<p><code>docker-compose -f /data/joplin.yml up -d</code>  启动</p>\n<h2 id=\"joplin配置\"><a class=\"markdownIt-Anchor\" href=\"#joplin配置\">#</a> joplin 配置</h2>\n<p><img src=\"image-20230514133632334.png\" alt=\"image-20230514133632334\"></p>\n",
            "tags": [
                "joplin"
            ]
        },
        {
            "id": "http://example.com/2023/05/14/linux%E5%B7%A1%E6%A3%80%E5%91%BD%E4%BB%A4/",
            "url": "http://example.com/2023/05/14/linux%E5%B7%A1%E6%A3%80%E5%91%BD%E4%BB%A4/",
            "title": "linux巡检命令",
            "date_published": "2023-05-14T02:52:00.000Z",
            "content_html": "<p><a href=\"https://www.linuxcool.com/\">linux 命令大全</a></p>\n<p>1、查看有多少个 IP 访问：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> log_file|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span>|<span class=\"hljs-built_in\">wc</span> -l<br></code></pre></td></tr></table></figure>\n<p>2、查看某一个页面被访问的次数：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">grep <span class=\"hljs-string\">&quot;/index.php&quot;</span> log_file <span class=\"hljs-string\">| wc -l</span><br></code></pre></td></tr></table></figure>\n<p>3、查看每一个 IP 访问了多少个页面：</p>\n<p>4、将每个 IP 访问的页面数进行从小到大排序：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">awk</span> <span class=\"hljs-string\">&#x27;&#123;++S[<span class=\"hljs-variable\">$1</span>]&#125; END &#123;for (a in S) print S[a],a&#125;&#x27;</span> log_file | sort -n<br></code></pre></td></tr></table></figure>\n<p>5、查看某一个 IP 访问了哪些页面：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">grep</span><span class=\"hljs-regexp\"> ^111.111.111.111</span> log_file| awk <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$1</span>,<span class=\"hljs-variable\">$7</span>&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n<p>6、去掉搜索引擎统计的页面：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">awk</span> <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$12</span>,<span class=\"hljs-variable\">$1</span>&#125;&#x27;</span> log_file | grep<span class=\"hljs-regexp\"> ^\\&quot;Mozilla</span> | awk <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$2</span>&#125;&#x27;</span> |sort | uniq | wc -l<br></code></pre></td></tr></table></figure>\n<p>7、查看 2015 年 8 月 16 日 14 时这一个小时内有多少 IP 访问:</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">awk</span> &#x27;&#123;print $<span class=\"hljs-number\">4</span>,$<span class=\"hljs-number\">1</span>&#125;&#x27; log_file | grep <span class=\"hljs-number\">16</span>/Aug/<span class=\"hljs-number\">2015</span>:<span class=\"hljs-number\">14</span> | awk &#x27;&#123;print $<span class=\"hljs-number\">2</span>&#125;&#x27;| sort | uniq | wc -l<br></code></pre></td></tr></table></figure>\n<p>8、查看访问前十个 ip 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> |<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr |<span class=\"hljs-built_in\">head</span> -10 access_log<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>uniq -c 相当于分组统计并把统计数放在最前面</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log|awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -10<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">cat access.log|awk &#x27;&#123;<span class=\"hljs-built_in\">counts</span>[$(<span class=\"hljs-number\">11</span>)]+=<span class=\"hljs-number\">1</span>&#125;; <span class=\"hljs-keyword\">END</span> &#123;<span class=\"hljs-keyword\">for</span>(url in <span class=\"hljs-built_in\">counts</span>) print counts[url], url&#125;<br></code></pre></td></tr></table></figure>\n<p>9、访问次数最多的 10 个文件或页面</p>\n<blockquote>\n<p>访问量最大的前 20 个 ip</p>\n</blockquote>\n<p>10、通过子域名访问次数，依据 referer 来计算，稍有不准</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log | awk <span class=\"hljs-string\">&#x27;&#123;print $11&#125;&#x27;</span> | sed -e <span class=\"hljs-string\">&#x27; s/http:\\/\\///&#x27;</span> -e <span class=\"hljs-string\">&#x27; s/\\/.*//&#x27;</span> | <span class=\"hljs-built_in\">sort</span> | <span class=\"hljs-built_in\">uniq</span> -c | <span class=\"hljs-built_in\">sort</span> -rn | <span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>11、列出传输大小最大的几个文件</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> www.access.log |awk &#x27;($<span class=\"hljs-number\">7</span>~/\\.php/)&#123;print $<span class=\"hljs-number\">10</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">7</span>&#125;&#x27;|sort -nr|head -<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n<p>12、列出输出大于 200000byte (约 200kb) 的页面以及对应页面发生次数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> www.access.log |awk <span class=\"hljs-string\">&#x27;($10 &gt; 200000 &amp;&amp; $7~/\\.php/)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -100<br></code></pre></td></tr></table></figure>\n<p>13、如果日志最后一列记录的是页面文件传输时间，则有列出到客户端最耗时的页面</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> www.access.log |awk &#x27;($<span class=\"hljs-number\">7</span>~/\\.php/)&#123;print $NF <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">7</span>&#125;&#x27;|sort -nr|head -<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n<p>14、列出最最耗时的页面 (超过 60 秒的) 的以及对应页面发生次数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> www.access.log |awk <span class=\"hljs-string\">&#x27;($NF &gt; 60 &amp;&amp; $7~/\\.php/)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -100<br></code></pre></td></tr></table></figure>\n<p>15、列出传输时间超过 30 秒的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> www.access.log |awk <span class=\"hljs-string\">&#x27;($NF &gt; 30)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>16、列出当前服务器每一进程运行的数量，倒序排列</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -ef | awk -F <span class=\"hljs-string\">&#x27; &#x27;</span> <span class=\"hljs-string\">&#x27;&#123;print $8 &quot; &quot; $9&#125;&#x27;</span> |<span class=\"hljs-built_in\">sort</span> | <span class=\"hljs-built_in\">uniq</span> -c |<span class=\"hljs-built_in\">sort</span> -nr |<span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>17、查看 apache 当前并发访问数</p>\n<p>对比 httpd.conf 中 MaxClients 的数字差距多少</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -an | <span class=\"hljs-type\">grep</span> ESTABLISHED | <span class=\"hljs-type\">wc</span> -l<br></code></pre></td></tr></table></figure>\n<p>18、可以使用如下参数查看数据</p>\n<p>统计 httpd 进程数，连个请求会启动一个进程，使用于 Apache 服务器。</p>\n<p>表示 Apache 能够处理 1388 个并发请求，这个值 Apache 可根据负载情况自动调整</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -nat|<span class=\"hljs-type\">grep</span> -i <span class=\"hljs-string\">&quot;80&quot;</span>|<span class=\"hljs-type\">wc</span> -l<br><span class=\"hljs-number\">4341</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>netstat -an 会打印系统当前网络链接状态，而 grep -i “80” 是用来提取与 80 端口有关的连接的，wc -l 进行连接数统计。<br>\n最终返回的数字就是当前所有 80 端口的请求总数</p>\n</blockquote>\n<blockquote>\n<p>netstat -an 会打印系统当前网络链接状态，而 grep ESTABLISHED 提取出已建立连接的信息。然后 wc -l 统计<br>\n最终返回的数字就是当前所有 80 端口的已建立连接的总数。</p>\n</blockquote>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -nat|<span class=\"hljs-type\">|grep</span> ESTABLISHED|<span class=\"hljs-type\">wc</span><br></code></pre></td></tr></table></figure>\n<p>可查看所有建立连接的详细记录</p>\n<p><strong>19、输出每个 ip 的连接数，以及总的各个状态的连接数</strong></p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">netstat -n | awk &#x27;/^tcp/ &#123;n=<span class=\"hljs-built_in\">split</span>($(NF-<span class=\"hljs-number\">1</span>),<span class=\"hljs-built_in\">array</span>,<span class=\"hljs-string\">&quot;:&quot;</span>);<span class=\"hljs-keyword\">if</span>(n&lt;=<span class=\"hljs-number\">2</span>)++S[<span class=\"hljs-built_in\">array</span>[(<span class=\"hljs-number\">1</span>)]];<span class=\"hljs-keyword\">else</span>++S[<span class=\"hljs-built_in\">array</span>[(<span class=\"hljs-number\">4</span>)]];++s[$NF];++N&#125; END &#123;<span class=\"hljs-keyword\">for</span>(a <span class=\"hljs-keyword\">in</span> S)&#123;<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>, a, S[a]);++I&#125;<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>,<span class=\"hljs-string\">&quot;TOTAL_IP&quot;</span>,I);<span class=\"hljs-keyword\">for</span>(a <span class=\"hljs-keyword\">in</span> s) <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>,a, s[a]);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>,<span class=\"hljs-string\">&quot;TOTAL_LINK&quot;</span>,N);&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p><strong>20、其他的收集</strong></p>\n<p>分析日志文件下 2012-05-04 访问页面最高 的前 20 个 URL 并排序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log |grep <span class=\"hljs-string\">&#x27;04/May/2012&#x27;</span>| awk <span class=\"hljs-string\">&#x27;&#123;print $11&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>查询受访问页面的 URL 地址中 含有 <a href=\"http://www.abc.com\">www.abc.com</a> 网址的 IP 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access_log | awk <span class=\"hljs-string\">&#x27;($11~/\\www.abc.com/)&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr<br></code></pre></td></tr></table></figure>\n<p>获取访问最高的 10 个 IP 地址 同时也可以按时间来查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> linewow-access.log|awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -10<br></code></pre></td></tr></table></figure>\n<p>时间段查询日志时间段的情况</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> log_file | egrep <span class=\"hljs-string\">&#x27;15/Aug/2015|16/Aug/2015&#x27;</span> |awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -10<br></code></pre></td></tr></table></figure>\n<p>分析 2015/8/15 到 2015/8/16 访问”/index.php?g=Member&amp;m=Public&amp;a=sendValidCode” 的 IP 倒序排列</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> log_file | egrep &#x27;<span class=\"hljs-number\">15</span>/Aug/<span class=\"hljs-number\">2015</span>|<span class=\"hljs-number\">16</span>/Aug/<span class=\"hljs-number\">2015</span>&#x27; | awk &#x27;&#123;if($<span class=\"hljs-number\">7</span> == <span class=\"hljs-string\">&quot;/index.php?g=Member&amp;m=Public&amp;a=sendValidCode&quot;</span>) print $<span class=\"hljs-number\">1</span>,$<span class=\"hljs-number\">7</span>&#125;&#x27;|sort|uniq -c|sort -nr<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>($7~/.php/) $7 里面包含. php 的就输出，本句的意思是最耗时的一百个 PHP 页面</p>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> log_file |awk &#x27;($<span class=\"hljs-number\">7</span>~/\\.php/)&#123;print $NF <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">7</span>&#125;&#x27;|sort -nr|head -<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n<p>列出最最耗时的页面 (超过 60 秒的) 的以及对应页面发生次数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log |awk <span class=\"hljs-string\">&#x27;($NF &gt; 60 &amp;&amp; $7~/\\.php/)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -100<br></code></pre></td></tr></table></figure>\n<p>统计网站流量（G)</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span> |awk &#x27;&#123;<span class=\"hljs-keyword\">sum</span>+=<span class=\"hljs-variable\">$10&#125;</span> END &#123;<span class=\"hljs-keyword\">print</span> <span class=\"hljs-keyword\">sum</span>/1024/1024/1024&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p>统计 404 的连接</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">awk</span> <span class=\"hljs-string\">&#x27;(<span class=\"hljs-variable\">$9</span> ~/404/)&#x27;</span> access.log | awk <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$9</span>,<span class=\"hljs-variable\">$7</span>&#125;&#x27;</span> | sort<br></code></pre></td></tr></table></figure>\n<p>统计 http status</p>\n<p>每秒并发</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">watch</span> <span class=\"hljs-string\">&quot;awk &#x27;&#123;if(<span class=\"hljs-variable\">$9</span>~/200|30|404/)COUNT[<span class=\"hljs-variable\">$4</span>]++&#125;END&#123;for( a in COUNT) print a,COUNT[a]&#125;&#x27; log_file|sort -k 2 -nr|head -n10&quot;</span><br></code></pre></td></tr></table></figure>\n<p>带宽统计</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">cat</span> apache.<span class=\"hljs-keyword\">log</span> |awk &#x27;&#123;<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$7</span>~/GET/) <span class=\"hljs-keyword\">count</span>++&#125;END&#123;<span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">&quot;client_request=&quot;</span><span class=\"hljs-keyword\">count</span>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p>找出某天访问次数最多的 10 个 IP</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> /tmp/access.log | grep <span class=\"hljs-string\">&quot;20/Mar/2011&quot;</span> |awk <span class=\"hljs-string\">&#x27;&#123;print $3&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> |<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span><br></code></pre></td></tr></table></figure>\n<p>当天 ip 连接数最高的 ip 都在干些什么</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log | grep <span class=\"hljs-string\">&quot;10.0.21.17&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $8&#125;&#x27;</span> | <span class=\"hljs-built_in\">sort</span> | <span class=\"hljs-built_in\">uniq</span> -c | <span class=\"hljs-built_in\">sort</span> -nr | <span class=\"hljs-built_in\">head</span> -n 10<br></code></pre></td></tr></table></figure>\n<p>小时单位里 ip 连接数最多的 10 个时段</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">awk</span> -vFS=<span class=\"hljs-string\">&quot;[:]&quot;</span> &#x27;&#123;gsub(<span class=\"hljs-string\">&quot;-.*&quot;</span>,<span class=\"hljs-string\">&quot;&quot;</span>,$<span class=\"hljs-number\">1</span>);num[$<span class=\"hljs-number\">2</span><span class=\"hljs-string\">&quot; &quot;</span>$<span class=\"hljs-number\">1</span>]++&#125;END&#123;for(i in num)print i,num[i]&#125;&#x27; log_file | sort -n -k <span class=\"hljs-number\">3</span> -r | head -<span class=\"hljs-number\">10</span><br></code></pre></td></tr></table></figure>\n<p>找出访问次数最多的几个分钟</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> access.log | grep <span class=\"hljs-string\">&quot;20/Mar/2011&quot;</span> |<span class=\"hljs-built_in\">cut</span> -c 14-18|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span><br></code></pre></td></tr></table></figure>\n<p>取 5 分钟日志</p>\n<p><code>if [ $DATE_MINUTE != $DATE_END_MINUTE ] ;then #</code> <br>\n则判断开始时间戳与结束时间戳是否相等</p>\n<p><code>START_LINE=sed -n &quot;/$DATE_MINUTE/=&quot; $APACHE_LOG|head -n1</code>  # 如果不相等，则取出开始时间戳的行号，与结束时间戳的行号</p>\n<p>查看 tcp 的链接状态</p>\n<p>查找请求数前 20 个 IP（常用于查找攻来源）：</p>\n<p>用 tcpdump 嗅探 80 端口的访问看看谁最高</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">tcpdump</span> -i eth0 -tnn dst port <span class=\"hljs-number\">80</span> -c <span class=\"hljs-number\">1000</span> | awk -F<span class=\"hljs-string\">&quot;.&quot;</span> &#x27;&#123;print $<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;.&quot;</span>$<span class=\"hljs-number\">2</span><span class=\"hljs-string\">&quot;.&quot;</span>$<span class=\"hljs-number\">3</span><span class=\"hljs-string\">&quot;.&quot;</span>$<span class=\"hljs-number\">4</span>&#125;&#x27; | sort | uniq -c | sort -nr |head -<span class=\"hljs-number\">20</span><br></code></pre></td></tr></table></figure>\n<p>查找较多 time_wait 连接</p>\n<p><code>netstat -n|grep TIME_WAIT|awk '&#123;print $5&#125;'|sort|uniq -c|sort -rn|head -n20</code></p>\n<p>找查较多的 SYN 连接</p>\n<p><code>netstat -an | grep SYN | awk '&#123;print $5&#125;' | awk -F: '&#123;print $1&#125;' | sort | uniq -c | sort -nr | more</code></p>\n<p>根据端口列进程</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -ntlp | <span class=\"hljs-type\">grep</span> <span class=\"hljs-number\">80</span> | <span class=\"hljs-type\">awk</span> &#x27;&#123;print $<span class=\"hljs-number\">7</span>&#125;&#x27; | <span class=\"hljs-type\">cut</span> -d/ -f1<br></code></pre></td></tr></table></figure>\n<p>查看了连接数和当前的连接数</p>\n<p>查看 IP 访问次数</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -nat|<span class=\"hljs-type\">grep</span> <span class=\"hljs-string\">&quot;:80&quot;</span>|<span class=\"hljs-type\">awk</span> &#x27;&#123;print $<span class=\"hljs-number\">5</span>&#125;&#x27; |<span class=\"hljs-type\">awk</span> -F: &#x27;&#123;print $<span class=\"hljs-number\">1</span>&#125;&#x27; | <span class=\"hljs-type\">sort</span>| <span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -n<br></code></pre></td></tr></table></figure>\n<p>Linux 命令分析当前的链接状况</p>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cos\">netstat -n | awk &#x27;/<span class=\"hljs-symbol\">^tcp</span>/ &#123;++<span class=\"hljs-keyword\">S</span>[<span class=\"hljs-built_in\">$NF</span>]&#125; END &#123;<span class=\"hljs-keyword\">for</span>(a in <span class=\"hljs-keyword\">S</span>) <span class=\"hljs-keyword\">print</span> a, <span class=\"hljs-keyword\">S</span>[a]&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p><code>watch &quot;netstat -n | awk '/^tcp/ &#123;++S[\\$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;'&quot;</code>  # 通过 watch 可以一直监控</p>\n<blockquote>\n<p>LAST_ACK 5 #关闭一个 TCP 连接需要从两个方向上分别进行关闭，双方都是通过发送 FIN 来表示单方向数据的关闭，当通信双方发送了最后一个 FIN 的时候，发送方此时处于 LAST_ACK 状态，当发送方收到对方的确认（Fin 的 Ack 确认）后才真正关闭整个 TCP 连接；</p>\n<p>SYN_RECV 30 # 表示正在等待处理的请求数；</p>\n<p>ESTABLISHED 1597 # 表示正常数据传输状态；</p>\n<p>FIN_WAIT1 51 # 表示 server 端主动要求关闭 tcp 连接；</p>\n<p>FIN_WAIT2 504 # 表示客户端中断连接；</p>\n<p>TIME_WAIT 1057 # 表示处理完毕，等待超时结束的请求数；</p>\n</blockquote>\n",
            "tags": [
                "shell"
            ]
        },
        {
            "id": "http://example.com/2023/05/13/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
            "url": "http://example.com/2023/05/13/hexo%E5%9B%BE%E7%89%87%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/",
            "title": "hexo图片问题解决",
            "date_published": "2023-05-13T02:52:41.000Z",
            "content_html": "<h2 id=\"1typora设置\"><a class=\"markdownIt-Anchor\" href=\"#1typora设置\">#</a> 1.typora 设置</h2>\n<p><img src=\"image-20230513105354056.png\" alt=\"image-20230513105354056\"></p>\n<h2 id=\"2安装插件\"><a class=\"markdownIt-Anchor\" href=\"#2安装插件\">#</a> 2. 安装插件</h2>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">npm install hexo-asset-<span class=\"hljs-built_in\">image</span> --<span class=\"hljs-built_in\">save</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"3修改hexo-asset-image配置\"><a class=\"markdownIt-Anchor\" href=\"#3修改hexo-asset-image配置\">#</a> 3. 修改 hexo-asset-image 配置</h2>\n<blockquote>\n<p>直接贴上配置文件</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-meta\">&#x27;use strict&#x27;</span>;<br><span class=\"hljs-keyword\">var</span> cheerio = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;cheerio&#x27;</span>);<br><br><span class=\"hljs-comment\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getPosition</span>(<span class=\"hljs-params\">str, m, i</span>) &#123;<br>  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">split</span>(m, i).<span class=\"hljs-title function_\">join</span>(m).<span class=\"hljs-property\">length</span>;<br>&#125;<br><br>hexo.<span class=\"hljs-property\">extend</span>.<span class=\"hljs-property\">filter</span>.<span class=\"hljs-title function_\">register</span>(<span class=\"hljs-string\">&#x27;after_post_render&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>)&#123;<br>  <span class=\"hljs-keyword\">var</span> config = hexo.<span class=\"hljs-property\">config</span>;<br>  <span class=\"hljs-keyword\">if</span>(config.<span class=\"hljs-property\">post_asset_folder</span>)&#123;<br>    <span class=\"hljs-keyword\">var</span> link = data.<span class=\"hljs-property\">permalink</span>;<br>    <span class=\"hljs-keyword\">var</span> beginPos = <span class=\"hljs-title function_\">getPosition</span>(link, <span class=\"hljs-string\">&#x27;/&#x27;</span>, <span class=\"hljs-number\">3</span>) + <span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">var</span> appendLink = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>    <span class=\"hljs-comment\">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br>    <span class=\"hljs-comment\">// if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink</span><br>    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-regexp\">/.*\\/index\\.html$/</span>.<span class=\"hljs-title function_\">test</span>(link)) &#123;<br>      <span class=\"hljs-comment\">// when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html</span><br>      <span class=\"hljs-comment\">// image in xxtitle/ will go to xxtitle/index/</span><br>      appendLink = <span class=\"hljs-string\">&#x27;index/&#x27;</span>;<br>      <span class=\"hljs-keyword\">var</span> endPos = link.<span class=\"hljs-title function_\">lastIndexOf</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>);<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-keyword\">var</span> endPos = link.<span class=\"hljs-title function_\">lastIndexOf</span>(<span class=\"hljs-string\">&#x27;.&#x27;</span>);<br>    &#125;<br>    link = link.<span class=\"hljs-title function_\">substring</span>(beginPos, endPos) + <span class=\"hljs-string\">&#x27;/&#x27;</span> + appendLink;<br><br>    <span class=\"hljs-keyword\">var</span> toprocess = [<span class=\"hljs-string\">&#x27;excerpt&#x27;</span>, <span class=\"hljs-string\">&#x27;more&#x27;</span>, <span class=\"hljs-string\">&#x27;content&#x27;</span>];<br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; toprocess.<span class=\"hljs-property\">length</span>; i++)&#123;<br>      <span class=\"hljs-keyword\">var</span> key = toprocess[i];<br><br>      <span class=\"hljs-keyword\">var</span> $ = cheerio.<span class=\"hljs-title function_\">load</span>(data[key], &#123;<br>        <span class=\"hljs-attr\">ignoreWhitespace</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-attr\">xmlMode</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-attr\">lowerCaseTags</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-attr\">decodeEntities</span>: <span class=\"hljs-literal\">false</span><br>      &#125;);<br><br>      $(<span class=\"hljs-string\">&#x27;img&#x27;</span>).<span class=\"hljs-title function_\">each</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)&#123;<br>        <span class=\"hljs-keyword\">if</span> ($(<span class=\"hljs-variable language_\">this</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;src&#x27;</span>))&#123;<br>          <span class=\"hljs-comment\">// For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;.</span><br>          <span class=\"hljs-keyword\">var</span> src = $(<span class=\"hljs-variable language_\">this</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;src&#x27;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&#x27;\\\\&#x27;</span>, <span class=\"hljs-string\">&#x27;/&#x27;</span>);<br>          <span class=\"hljs-keyword\">if</span>(!(<span class=\"hljs-regexp\">/http[s]*.*|\\/\\/.*/</span>.<span class=\"hljs-title function_\">test</span>(src)<br>            || <span class=\"hljs-regexp\">/^\\s+\\//</span>.<span class=\"hljs-title function_\">test</span>(src)<br>            || <span class=\"hljs-regexp\">/^\\s*\\/uploads|images\\//</span>.<span class=\"hljs-title function_\">test</span>(src))) &#123;<br>            <span class=\"hljs-comment\">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br>            <span class=\"hljs-comment\">// In addition, to support multi-level local directory.</span><br>            <span class=\"hljs-keyword\">var</span> linkArray = link.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>).<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">elem</span>)&#123;<br>              <span class=\"hljs-keyword\">return</span> elem != <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>            &#125;);<br>            <span class=\"hljs-keyword\">var</span> srcArray = src.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>).<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">elem</span>)&#123;<br>              <span class=\"hljs-keyword\">return</span> elem != <span class=\"hljs-string\">&#x27;&#x27;</span> &amp;&amp; elem != <span class=\"hljs-string\">&#x27;.&#x27;</span>;<br>            &#125;);<br>            <span class=\"hljs-keyword\">if</span>(srcArray.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">1</span>)<br>            srcArray.<span class=\"hljs-title function_\">shift</span>();<br>            src = srcArray.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;/&#x27;</span>);<br><br>            $(<span class=\"hljs-variable language_\">this</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;src&#x27;</span>, src);<br>            <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">info</span>&amp;&amp;<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">&quot;update link as:--&gt;&quot;</span>+config.<span class=\"hljs-property\">root</span> + link + src);<br>          &#125;<br>        &#125;<span class=\"hljs-keyword\">else</span>&#123;<br>          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">info</span>&amp;&amp;<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>(<span class=\"hljs-string\">&quot;no src attr, skipped...&quot;</span>);<br>          <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-property\">info</span>&amp;&amp;<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">info</span>($(<span class=\"hljs-variable language_\">this</span>));<br>        &#125;<br>      &#125;);<br>      data[key] = $.<span class=\"hljs-title function_\">html</span>();<br>    &#125;<br>  &#125;<br>&#125;);<br><br></code></pre></td></tr></table></figure>\n<h2 id=\"4替换图片链接\"><a class=\"markdownIt-Anchor\" href=\"#4替换图片链接\">#</a> 4. 替换图片链接</h2>\n<blockquote>\n<p>替换图片链接是最简单的解决办法</p>\n</blockquote>\n<p>ctrl+h 打开全局替换</p>\n<p>这里我截个图测试一下</p>\n<p><img src=\"image-20230513105814898.png\" alt=\"image-20230513105814898\"></p>\n<p><img src=\"image-20230513105850650.png\" alt=\"image-20230513105850650\"></p>\n<p><img src=\"image-20230513105854808.png\" alt=\"image-20230513105854808\"></p>\n<h2 id=\"5执行命令\"><a class=\"markdownIt-Anchor\" href=\"#5执行命令\">#</a> 5. 执行命令</h2>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ebnf\"><span class=\"hljs-attribute\">hexo d -g</span><br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "hexo博客"
            ]
        },
        {
            "id": "http://example.com/2023/05/10/nginx%E9%85%8D%E7%BD%AETCP-UDP%E8%BD%AC%E5%8F%91/",
            "url": "http://example.com/2023/05/10/nginx%E9%85%8D%E7%BD%AETCP-UDP%E8%BD%AC%E5%8F%91/",
            "title": "nginx配置TCP/UDP转发",
            "date_published": "2023-05-10T12:36:24.000Z",
            "content_html": "<h2 id=\"实现代码\"><a class=\"markdownIt-Anchor\" href=\"#实现代码\">#</a> 实现代码</h2>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-section\">stream</span> &#123;<br>    <span class=\"hljs-comment\">#将12345端口转发到192.168.1.23的3306端口</span><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">12345</span>;<br>        <span class=\"hljs-attribute\">proxy_connect_timeout</span> <span class=\"hljs-number\">5s</span>;<br>        <span class=\"hljs-attribute\">proxy_timeout</span> <span class=\"hljs-number\">20s</span>;<br>        <span class=\"hljs-attribute\">proxy_pass</span> <span class=\"hljs-number\">192.168.1.23:3306</span>;<br>    &#125;<br>    <span class=\"hljs-comment\">#将udp 53端口转发到192.168.1.23 53端口</span><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">53</span> udp reuseport;<br>        <span class=\"hljs-attribute\">proxy_timeout</span> <span class=\"hljs-number\">20s</span>;<br>        <span class=\"hljs-attribute\">proxy_pass</span> <span class=\"hljs-number\">192.168.1.23:53</span>;<br>    &#125;<br>    <span class=\"hljs-comment\">#ipv4转发到ipv6</span><br>    <span class=\"hljs-section\">server</span> &#123;<br>        <span class=\"hljs-attribute\">listen</span> <span class=\"hljs-number\">9135</span>;<br>        <span class=\"hljs-attribute\">proxy_connect_timeout</span> <span class=\"hljs-number\">10s</span>;<br>        <span class=\"hljs-attribute\">proxy_timeout</span> <span class=\"hljs-number\">30s</span>;<br>        <span class=\"hljs-attribute\">proxy_pass</span> [<span class=\"hljs-number\">2607</span>:fcd0:<span class=\"hljs-number\">107</span>:3cc::<span class=\"hljs-number\">1</span>]:<span class=\"hljs-number\">9135</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"前提\"><a class=\"markdownIt-Anchor\" href=\"#前提\">#</a> 前提</h2>\n<blockquote>\n<p>版本一定要大于 1.9.1，编译的时候需要–with-stream 这个模块支持。</p>\n</blockquote>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs awk\"><span class=\"hljs-comment\">#执行下面的命令，根据提示完成安装</span><br>wget https:<span class=\"hljs-regexp\">//</span>raw.githubusercontent.com<span class=\"hljs-regexp\">/helloxz/</span>nginx-cdn<span class=\"hljs-regexp\">/master/</span>nginx.sh &amp;&amp; bash nginx.sh<br><span class=\"hljs-comment\">#安装完成后执行下面的命令让环境变量生效</span><br>source <span class=\"hljs-regexp\">/etc/</span>profile<br><span class=\"hljs-comment\">#执行下面的命令查看nginx信息</span><br>nginx -V<br></code></pre></td></tr></table></figure>\n",
            "tags": [
                "开发"
            ]
        }
    ]
}