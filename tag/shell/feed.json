{
    "version": "https://jsonfeed.org/version/1",
    "title": "让风听见 • All posts by \"shell\" tag",
    "description": "人生不可能总是顺心如意的，但是持续朝着阳光走，影子就会躲在后面。刺眼，却表明对的方向。",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/05/14/linux%E5%B7%A1%E6%A3%80%E5%91%BD%E4%BB%A4/",
            "url": "http://example.com/2023/05/14/linux%E5%B7%A1%E6%A3%80%E5%91%BD%E4%BB%A4/",
            "title": "linux巡检命令",
            "date_published": "2023-05-14T02:52:00.000Z",
            "content_html": "<p><a href=\"https://www.linuxcool.com/\">linux 命令大全</a></p>\n<p>1、查看有多少个 IP 访问：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> log_file|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span>|<span class=\"hljs-built_in\">wc</span> -l<br></code></pre></td></tr></table></figure>\n<p>2、查看某一个页面被访问的次数：</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs 1c\">grep <span class=\"hljs-string\">&quot;/index.php&quot;</span> log_file <span class=\"hljs-string\">| wc -l</span><br></code></pre></td></tr></table></figure>\n<p>3、查看每一个 IP 访问了多少个页面：</p>\n<p>4、将每个 IP 访问的页面数进行从小到大排序：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">awk</span> <span class=\"hljs-string\">&#x27;&#123;++S[<span class=\"hljs-variable\">$1</span>]&#125; END &#123;for (a in S) print S[a],a&#125;&#x27;</span> log_file | sort -n<br></code></pre></td></tr></table></figure>\n<p>5、查看某一个 IP 访问了哪些页面：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">grep</span><span class=\"hljs-regexp\"> ^111.111.111.111</span> log_file| awk <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$1</span>,<span class=\"hljs-variable\">$7</span>&#125;&#x27;</span><br></code></pre></td></tr></table></figure>\n<p>6、去掉搜索引擎统计的页面：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">awk</span> <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$12</span>,<span class=\"hljs-variable\">$1</span>&#125;&#x27;</span> log_file | grep<span class=\"hljs-regexp\"> ^\\&quot;Mozilla</span> | awk <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$2</span>&#125;&#x27;</span> |sort | uniq | wc -l<br></code></pre></td></tr></table></figure>\n<p>7、查看 2015 年 8 月 16 日 14 时这一个小时内有多少 IP 访问:</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">awk</span> &#x27;&#123;print $<span class=\"hljs-number\">4</span>,$<span class=\"hljs-number\">1</span>&#125;&#x27; log_file | grep <span class=\"hljs-number\">16</span>/Aug/<span class=\"hljs-number\">2015</span>:<span class=\"hljs-number\">14</span> | awk &#x27;&#123;print $<span class=\"hljs-number\">2</span>&#125;&#x27;| sort | uniq | wc -l<br></code></pre></td></tr></table></figure>\n<p>8、查看访问前十个 ip 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> |<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr |<span class=\"hljs-built_in\">head</span> -10 access_log<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>uniq -c 相当于分组统计并把统计数放在最前面</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log|awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -10<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight gauss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs gauss\">cat access.log|awk &#x27;&#123;<span class=\"hljs-built_in\">counts</span>[$(<span class=\"hljs-number\">11</span>)]+=<span class=\"hljs-number\">1</span>&#125;; <span class=\"hljs-keyword\">END</span> &#123;<span class=\"hljs-keyword\">for</span>(url in <span class=\"hljs-built_in\">counts</span>) print counts[url], url&#125;<br></code></pre></td></tr></table></figure>\n<p>9、访问次数最多的 10 个文件或页面</p>\n<blockquote>\n<p>访问量最大的前 20 个 ip</p>\n</blockquote>\n<p>10、通过子域名访问次数，依据 referer 来计算，稍有不准</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log | awk <span class=\"hljs-string\">&#x27;&#123;print $11&#125;&#x27;</span> | sed -e <span class=\"hljs-string\">&#x27; s/http:\\/\\///&#x27;</span> -e <span class=\"hljs-string\">&#x27; s/\\/.*//&#x27;</span> | <span class=\"hljs-built_in\">sort</span> | <span class=\"hljs-built_in\">uniq</span> -c | <span class=\"hljs-built_in\">sort</span> -rn | <span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>11、列出传输大小最大的几个文件</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> www.access.log |awk &#x27;($<span class=\"hljs-number\">7</span>~/\\.php/)&#123;print $<span class=\"hljs-number\">10</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">7</span>&#125;&#x27;|sort -nr|head -<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n<p>12、列出输出大于 200000byte (约 200kb) 的页面以及对应页面发生次数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> www.access.log |awk <span class=\"hljs-string\">&#x27;($10 &gt; 200000 &amp;&amp; $7~/\\.php/)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -100<br></code></pre></td></tr></table></figure>\n<p>13、如果日志最后一列记录的是页面文件传输时间，则有列出到客户端最耗时的页面</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> www.access.log |awk &#x27;($<span class=\"hljs-number\">7</span>~/\\.php/)&#123;print $NF <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">7</span>&#125;&#x27;|sort -nr|head -<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n<p>14、列出最最耗时的页面 (超过 60 秒的) 的以及对应页面发生次数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> www.access.log |awk <span class=\"hljs-string\">&#x27;($NF &gt; 60 &amp;&amp; $7~/\\.php/)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -100<br></code></pre></td></tr></table></figure>\n<p>15、列出传输时间超过 30 秒的文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> www.access.log |awk <span class=\"hljs-string\">&#x27;($NF &gt; 30)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>16、列出当前服务器每一进程运行的数量，倒序排列</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps -ef | awk -F <span class=\"hljs-string\">&#x27; &#x27;</span> <span class=\"hljs-string\">&#x27;&#123;print $8 &quot; &quot; $9&#125;&#x27;</span> |<span class=\"hljs-built_in\">sort</span> | <span class=\"hljs-built_in\">uniq</span> -c |<span class=\"hljs-built_in\">sort</span> -nr |<span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>17、查看 apache 当前并发访问数</p>\n<p>对比 httpd.conf 中 MaxClients 的数字差距多少</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -an | <span class=\"hljs-type\">grep</span> ESTABLISHED | <span class=\"hljs-type\">wc</span> -l<br></code></pre></td></tr></table></figure>\n<p>18、可以使用如下参数查看数据</p>\n<p>统计 httpd 进程数，连个请求会启动一个进程，使用于 Apache 服务器。</p>\n<p>表示 Apache 能够处理 1388 个并发请求，这个值 Apache 可根据负载情况自动调整</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -nat|<span class=\"hljs-type\">grep</span> -i <span class=\"hljs-string\">&quot;80&quot;</span>|<span class=\"hljs-type\">wc</span> -l<br><span class=\"hljs-number\">4341</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>netstat -an 会打印系统当前网络链接状态，而 grep -i “80” 是用来提取与 80 端口有关的连接的，wc -l 进行连接数统计。<br>\n最终返回的数字就是当前所有 80 端口的请求总数</p>\n</blockquote>\n<blockquote>\n<p>netstat -an 会打印系统当前网络链接状态，而 grep ESTABLISHED 提取出已建立连接的信息。然后 wc -l 统计<br>\n最终返回的数字就是当前所有 80 端口的已建立连接的总数。</p>\n</blockquote>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -nat|<span class=\"hljs-type\">|grep</span> ESTABLISHED|<span class=\"hljs-type\">wc</span><br></code></pre></td></tr></table></figure>\n<p>可查看所有建立连接的详细记录</p>\n<p><strong>19、输出每个 ip 的连接数，以及总的各个状态的连接数</strong></p>\n<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs maxima\">netstat -n | awk &#x27;/^tcp/ &#123;n=<span class=\"hljs-built_in\">split</span>($(NF-<span class=\"hljs-number\">1</span>),<span class=\"hljs-built_in\">array</span>,<span class=\"hljs-string\">&quot;:&quot;</span>);<span class=\"hljs-keyword\">if</span>(n&lt;=<span class=\"hljs-number\">2</span>)++S[<span class=\"hljs-built_in\">array</span>[(<span class=\"hljs-number\">1</span>)]];<span class=\"hljs-keyword\">else</span>++S[<span class=\"hljs-built_in\">array</span>[(<span class=\"hljs-number\">4</span>)]];++s[$NF];++N&#125; END &#123;<span class=\"hljs-keyword\">for</span>(a <span class=\"hljs-keyword\">in</span> S)&#123;<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>, a, S[a]);++I&#125;<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>,<span class=\"hljs-string\">&quot;TOTAL_IP&quot;</span>,I);<span class=\"hljs-keyword\">for</span>(a <span class=\"hljs-keyword\">in</span> s) <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>,a, s[a]);<span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%-20s %s\\n&quot;</span>,<span class=\"hljs-string\">&quot;TOTAL_LINK&quot;</span>,N);&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p><strong>20、其他的收集</strong></p>\n<p>分析日志文件下 2012-05-04 访问页面最高 的前 20 个 URL 并排序</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log |grep <span class=\"hljs-string\">&#x27;04/May/2012&#x27;</span>| awk <span class=\"hljs-string\">&#x27;&#123;print $11&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -20<br></code></pre></td></tr></table></figure>\n<p>查询受访问页面的 URL 地址中 含有 <a href=\"http://www.abc.com\">www.abc.com</a> 网址的 IP 地址</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access_log | awk <span class=\"hljs-string\">&#x27;($11~/\\www.abc.com/)&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr<br></code></pre></td></tr></table></figure>\n<p>获取访问最高的 10 个 IP 地址 同时也可以按时间来查询</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> linewow-access.log|awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -10<br></code></pre></td></tr></table></figure>\n<p>时间段查询日志时间段的情况</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> log_file | egrep <span class=\"hljs-string\">&#x27;15/Aug/2015|16/Aug/2015&#x27;</span> |awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -10<br></code></pre></td></tr></table></figure>\n<p>分析 2015/8/15 到 2015/8/16 访问”/index.php?g=Member&amp;m=Public&amp;a=sendValidCode” 的 IP 倒序排列</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> log_file | egrep &#x27;<span class=\"hljs-number\">15</span>/Aug/<span class=\"hljs-number\">2015</span>|<span class=\"hljs-number\">16</span>/Aug/<span class=\"hljs-number\">2015</span>&#x27; | awk &#x27;&#123;if($<span class=\"hljs-number\">7</span> == <span class=\"hljs-string\">&quot;/index.php?g=Member&amp;m=Public&amp;a=sendValidCode&quot;</span>) print $<span class=\"hljs-number\">1</span>,$<span class=\"hljs-number\">7</span>&#125;&#x27;|sort|uniq -c|sort -nr<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p>($7~/.php/) $7 里面包含. php 的就输出，本句的意思是最耗时的一百个 PHP 页面</p>\n</blockquote>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">cat</span> log_file |awk &#x27;($<span class=\"hljs-number\">7</span>~/\\.php/)&#123;print $NF <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">&quot; &quot;</span> $<span class=\"hljs-number\">7</span>&#125;&#x27;|sort -nr|head -<span class=\"hljs-number\">100</span><br></code></pre></td></tr></table></figure>\n<p>列出最最耗时的页面 (超过 60 秒的) 的以及对应页面发生次数</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log |awk <span class=\"hljs-string\">&#x27;($NF &gt; 60 &amp;&amp; $7~/\\.php/)&#123;print $7&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> -n|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span> -100<br></code></pre></td></tr></table></figure>\n<p>统计网站流量（G)</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">cat</span> access.<span class=\"hljs-keyword\">log</span> |awk &#x27;&#123;<span class=\"hljs-keyword\">sum</span>+=<span class=\"hljs-variable\">$10&#125;</span> END &#123;<span class=\"hljs-keyword\">print</span> <span class=\"hljs-keyword\">sum</span>/1024/1024/1024&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p>统计 404 的连接</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">awk</span> <span class=\"hljs-string\">&#x27;(<span class=\"hljs-variable\">$9</span> ~/404/)&#x27;</span> access.log | awk <span class=\"hljs-string\">&#x27;&#123;print <span class=\"hljs-variable\">$9</span>,<span class=\"hljs-variable\">$7</span>&#125;&#x27;</span> | sort<br></code></pre></td></tr></table></figure>\n<p>统计 http status</p>\n<p>每秒并发</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">watch</span> <span class=\"hljs-string\">&quot;awk &#x27;&#123;if(<span class=\"hljs-variable\">$9</span>~/200|30|404/)COUNT[<span class=\"hljs-variable\">$4</span>]++&#125;END&#123;for( a in COUNT) print a,COUNT[a]&#125;&#x27; log_file|sort -k 2 -nr|head -n10&quot;</span><br></code></pre></td></tr></table></figure>\n<p>带宽统计</p>\n<figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stata\"><span class=\"hljs-keyword\">cat</span> apache.<span class=\"hljs-keyword\">log</span> |awk &#x27;&#123;<span class=\"hljs-keyword\">if</span>(<span class=\"hljs-variable\">$7</span>~/GET/) <span class=\"hljs-keyword\">count</span>++&#125;END&#123;<span class=\"hljs-keyword\">print</span> <span class=\"hljs-string\">&quot;client_request=&quot;</span><span class=\"hljs-keyword\">count</span>&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p>找出某天访问次数最多的 10 个 IP</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> /tmp/access.log | grep <span class=\"hljs-string\">&quot;20/Mar/2011&quot;</span> |awk <span class=\"hljs-string\">&#x27;&#123;print $3&#125;&#x27;</span>|<span class=\"hljs-built_in\">sort</span> |<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span><br></code></pre></td></tr></table></figure>\n<p>当天 ip 连接数最高的 ip 都在干些什么</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cat</span> access.log | grep <span class=\"hljs-string\">&quot;10.0.21.17&quot;</span> | awk <span class=\"hljs-string\">&#x27;&#123;print $8&#125;&#x27;</span> | <span class=\"hljs-built_in\">sort</span> | <span class=\"hljs-built_in\">uniq</span> -c | <span class=\"hljs-built_in\">sort</span> -nr | <span class=\"hljs-built_in\">head</span> -n 10<br></code></pre></td></tr></table></figure>\n<p>小时单位里 ip 连接数最多的 10 个时段</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">awk</span> -vFS=<span class=\"hljs-string\">&quot;[:]&quot;</span> &#x27;&#123;gsub(<span class=\"hljs-string\">&quot;-.*&quot;</span>,<span class=\"hljs-string\">&quot;&quot;</span>,$<span class=\"hljs-number\">1</span>);num[$<span class=\"hljs-number\">2</span><span class=\"hljs-string\">&quot; &quot;</span>$<span class=\"hljs-number\">1</span>]++&#125;END&#123;for(i in num)print i,num[i]&#125;&#x27; log_file | sort -n -k <span class=\"hljs-number\">3</span> -r | head -<span class=\"hljs-number\">10</span><br></code></pre></td></tr></table></figure>\n<p>找出访问次数最多的几个分钟</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">awk <span class=\"hljs-string\">&#x27;&#123;print $1&#125;&#x27;</span> access.log | grep <span class=\"hljs-string\">&quot;20/Mar/2011&quot;</span> |<span class=\"hljs-built_in\">cut</span> -c 14-18|<span class=\"hljs-built_in\">sort</span>|<span class=\"hljs-built_in\">uniq</span> -c|<span class=\"hljs-built_in\">sort</span> -nr|<span class=\"hljs-built_in\">head</span><br></code></pre></td></tr></table></figure>\n<p>取 5 分钟日志</p>\n<p><code>if [ $DATE_MINUTE != $DATE_END_MINUTE ] ;then #</code> <br>\n则判断开始时间戳与结束时间戳是否相等</p>\n<p><code>START_LINE=sed -n &quot;/$DATE_MINUTE/=&quot; $APACHE_LOG|head -n1</code>  # 如果不相等，则取出开始时间戳的行号，与结束时间戳的行号</p>\n<p>查看 tcp 的链接状态</p>\n<p>查找请求数前 20 个 IP（常用于查找攻来源）：</p>\n<p>用 tcpdump 嗅探 80 端口的访问看看谁最高</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">tcpdump</span> -i eth0 -tnn dst port <span class=\"hljs-number\">80</span> -c <span class=\"hljs-number\">1000</span> | awk -F<span class=\"hljs-string\">&quot;.&quot;</span> &#x27;&#123;print $<span class=\"hljs-number\">1</span><span class=\"hljs-string\">&quot;.&quot;</span>$<span class=\"hljs-number\">2</span><span class=\"hljs-string\">&quot;.&quot;</span>$<span class=\"hljs-number\">3</span><span class=\"hljs-string\">&quot;.&quot;</span>$<span class=\"hljs-number\">4</span>&#125;&#x27; | sort | uniq -c | sort -nr |head -<span class=\"hljs-number\">20</span><br></code></pre></td></tr></table></figure>\n<p>查找较多 time_wait 连接</p>\n<p><code>netstat -n|grep TIME_WAIT|awk '&#123;print $5&#125;'|sort|uniq -c|sort -rn|head -n20</code></p>\n<p>找查较多的 SYN 连接</p>\n<p><code>netstat -an | grep SYN | awk '&#123;print $5&#125;' | awk -F: '&#123;print $1&#125;' | sort | uniq -c | sort -nr | more</code></p>\n<p>根据端口列进程</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -ntlp | <span class=\"hljs-type\">grep</span> <span class=\"hljs-number\">80</span> | <span class=\"hljs-type\">awk</span> &#x27;&#123;print $<span class=\"hljs-number\">7</span>&#125;&#x27; | <span class=\"hljs-type\">cut</span> -d/ -f1<br></code></pre></td></tr></table></figure>\n<p>查看了连接数和当前的连接数</p>\n<p>查看 IP 访问次数</p>\n<figure class=\"highlight coq\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs coq\">netstat -nat|<span class=\"hljs-type\">grep</span> <span class=\"hljs-string\">&quot;:80&quot;</span>|<span class=\"hljs-type\">awk</span> &#x27;&#123;print $<span class=\"hljs-number\">5</span>&#125;&#x27; |<span class=\"hljs-type\">awk</span> -F: &#x27;&#123;print $<span class=\"hljs-number\">1</span>&#125;&#x27; | <span class=\"hljs-type\">sort</span>| <span class=\"hljs-type\">uniq</span> -c|<span class=\"hljs-type\">sort</span> -n<br></code></pre></td></tr></table></figure>\n<p>Linux 命令分析当前的链接状况</p>\n<figure class=\"highlight cos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs cos\">netstat -n | awk &#x27;/<span class=\"hljs-symbol\">^tcp</span>/ &#123;++<span class=\"hljs-keyword\">S</span>[<span class=\"hljs-built_in\">$NF</span>]&#125; END &#123;<span class=\"hljs-keyword\">for</span>(a in <span class=\"hljs-keyword\">S</span>) <span class=\"hljs-keyword\">print</span> a, <span class=\"hljs-keyword\">S</span>[a]&#125;&#x27;<br></code></pre></td></tr></table></figure>\n<p><code>watch &quot;netstat -n | awk '/^tcp/ &#123;++S[\\$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;'&quot;</code>  # 通过 watch 可以一直监控</p>\n<blockquote>\n<p>LAST_ACK 5 #关闭一个 TCP 连接需要从两个方向上分别进行关闭，双方都是通过发送 FIN 来表示单方向数据的关闭，当通信双方发送了最后一个 FIN 的时候，发送方此时处于 LAST_ACK 状态，当发送方收到对方的确认（Fin 的 Ack 确认）后才真正关闭整个 TCP 连接；</p>\n<p>SYN_RECV 30 # 表示正在等待处理的请求数；</p>\n<p>ESTABLISHED 1597 # 表示正常数据传输状态；</p>\n<p>FIN_WAIT1 51 # 表示 server 端主动要求关闭 tcp 连接；</p>\n<p>FIN_WAIT2 504 # 表示客户端中断连接；</p>\n<p>TIME_WAIT 1057 # 表示处理完毕，等待超时结束的请求数；</p>\n</blockquote>\n",
            "tags": [
                "shell"
            ]
        }
    ]
}